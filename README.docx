[ НАЗВАНИЕ ПРОЕКТА ]
	Pomodorka timer
[ ПРОБЛЕМНОЕ ПОЛЕ ]
При накоплении задач и увеличении нагрузки требуется более упорядоченный рабочий процесс. Учитывая, что количество времени, которое надо тратить на одну задачу увеличивается с каждым новым годом образования, для наибольшей эффективности это время надо использовать максимально оптимально. Метод Pomodoro timer давно известен и его эффективность доказана, однако он нигде не реализован достаточно хорошо. При этом, функционал дает возможность использовать его не только как Pomodoro timer, но также и покрывает аудиторию, нуждающуюся в помощи в готовке. Запуск нескольких таймеров одновременно и пользовательский интерфейс названий позволяет сильно оптимизировать и облегчить как дела на кухне, так и рабочий процесс
[ ПОТЕНЦИАЛЬНАЯ АУДИТОРИЯ ]
  •	Все, кто готовит
  •	Студенты
  •	Школьники старших классов
[ АППАРАТНЫЕ ТРЕБОВАНИЯ ]
Windows, 50мб места на носителе, 300мб оперативной памяти
[ ФУНКЦИОНАЛЬНЫЕ ТРЕБОВАНИЯ ]
  1.	Создание таймера
  2.	Создание стандартного таймера Pomodoro
  3.	Выбор темы
  4.	Выбор профиля
  5.	Создание именованных интервалов
  6.	Ограниченное количество повторение таймера 
  7.	Возможность пропуска конкретного таймера из цикла
[АНАЛОГИЧНЫЕ ПРОДУКТЫ ]
  1.	Focus 10:
    a.	Плюсы:
      i.	Простой и интуитивный интерфейс
    b.	Минусы:
      i.	Скачивается из Microsoft Store
      ii.	Нет установки времени таймера
  2.	YAPA
    a.	Плюсы:
      i.	Ультра простой интерфейс
      ii.	Прозрачный фон позволяет видеть время во время работы в других приложениях
    b.	Минусы:
      i.	Нет никаких настроек
      ii.	Не видно поверх некоторых приложений
  3.	Pomodor
    a.	Плюсы:
      i.	Удобный интерфейс
      ii.	Возможность изменять время работы и количество циклов
    b.	Минусы:
      i.	Нет на русском языке
      ii.	Только онлайн
[ ИНСТРУМЕНТЫ РАЗРАБОТКИ ]
 	C# - WPF	
[ ЭТАПЫ РАЗРАБОТКИ ]
  1.	Разработка пользовательских сценариев
  2.	Проектирование интерфейса
  3.	Создание основного функционала
  4.	Отработка пользовательских сценариев
  5.	Проектирование и реализация дизайна и интерфейса
  6.	Доработка функционала
  7.	Интеграция с облачными сервисами
  8.	Тестирование и отладка
  9.	Подготовка проекта к защите
[ ВОЗМОЖНЫЕ РИСКИ ]
  •	Проблемы с интеграцией с облачными сервисами
  •	Неправильная оценка времени изучения нового материала
  •	Неправильная оценка сложности реализации проекта
  •	Трудности приятного дизайна проекта в связи с отсутствием художественных навыков

